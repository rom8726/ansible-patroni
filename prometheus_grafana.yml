---
- name: Install Prometheus and Grafana
  hosts: prometheus_grafana
  become: true
  tasks:
    - name: Create prometheus user
      ansible.builtin.user:
        name: prometheus
        system: true
        shell: /sbin/nologin

    - name: Create prometheus directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      with_items:
        - "{{ prometheus_storage_path }}"
        - "{{ prometheus_config_path }}"

    - name: Download Prometheus
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/\
        prometheus-{{ prometheus_version }}.linux-{{ prometheus_arch }}.tar.gz"
        dest: /tmp/prometheus.tar.gz
        mode: '0644'

    - name: Extract Prometheus
      ansible.builtin.unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp
        remote_src: true

    - name: Copy Prometheus binaries
      ansible.builtin.copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ prometheus_arch }}/{{ item }}"
        dest: "/usr/local/bin/"
        mode: '0755'
        remote_src: true
      with_items:
        - prometheus
        - promtool

    - name: Verify prometheus binary after installation
      ansible.builtin.command: /usr/local/bin/prometheus --version
      register: prometheus_version_check
      changed_when: false
      ignore_errors: true

    - name: Display prometheus version
      ansible.builtin.debug:
        var: prometheus_version_check.stdout_lines
      when: prometheus_version_check.rc == 0

    - name: Fail if prometheus binary check failed
      ansible.builtin.fail:
        msg: "Prometheus binary verification failed"
      when: prometheus_version_check.rc != 0

    - name: Create Prometheus config
      ansible.builtin.template:
        src: templates/prometheus.yml.j2
        dest: "{{ prometheus_config_path }}/prometheus.yml"
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Create Prometheus systemd service
      ansible.builtin.template:
        src: templates/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        mode: '0644'

    - name: Add Grafana GPG key
      ansible.builtin.apt_key:
        url: https://apt.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      ansible.builtin.apt_repository:
        repo: "deb https://apt.grafana.com stable main"
        state: present
        filename: grafana

    - name: Install Grafana
      ansible.builtin.apt:
        name: grafana
        update_cache: true
        state: present

    - name: Configure Grafana
      ansible.builtin.template:
        src: templates/grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        mode: '0644'

    - name: Start and enable services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
        daemon_reload: true
      with_items:
        - prometheus
        - grafana-server

    - name: Allow Prometheus and Grafana ports
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - "{{ prometheus_port }}"  # Prometheus
        - "{{ grafana_port }}"     # Grafana

  handlers:
    - name: Restart services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
      with_items:
        - prometheus
        - grafana-server
